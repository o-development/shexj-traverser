import Transformers from "./Transformers";
import {
  Schema,
  prefixes,
  SemAct,
  shapeExpr,
  shapes,
  ShapeOr,
  ShapeAnd,
  ShapeNot,
  ShapeRef,
  NodeConstraint,
  Shape,
  valueSetValue,
  tripleExpr,
  Annotation,
  EachOf,
  OneOf,
  TripleConstraint,
  ObjectLiteral,
  IriStem,
  IriStemRange,
  LiteralStem,
  LiteralStemRange,
  Language,
  LanguageStem,
  LanguageStemRange,
} from "./shexTypes";
import traverseSchema from "./traversers/traverseSchema";
import defaultTransformers from "./defaultTransformers";

export default function traverseShex<
  SchemaReturn = Schema,
  prefixesReturn = prefixes,
  SemActReturn = SemAct,
  shapeExprReturn = shapeExpr,
  shapesReturn = shapes,
  ShapeOrReturn = ShapeOr,
  ShapeAndReturn = ShapeAnd,
  ShapeNotReturn = ShapeNot,
  ShapeRefReturn = ShapeRef,
  NodeConstraintReturn = NodeConstraint,
  ShapeReturn = Shape,
  valueSetValueReturn = valueSetValue,
  tripleExprReturn = tripleExpr,
  AnnotationReturn = Annotation,
  EachOfReturn = EachOf,
  OneOfReturn = OneOf,
  TripleConstraintReturn = TripleConstraint,
  ObjectLiteralReturn = ObjectLiteral,
  IriStemReturn = IriStem,
  IriStemRangeReturn = IriStemRange,
  LiteralStemReturn = LiteralStem,
  LiteralStemRangeReturn = LiteralStemRange,
  LanguageReturn = Language,
  LanguageStemReturn = LanguageStem,
  LanguageStemRangeReturn = LanguageStemRange,
  AnnotationsReturn = AnnotationReturn[],
  SemActsReturn = SemActReturn[]
>(
  shexSchema: Schema,
  transformers: Partial<
    Transformers<
      SchemaReturn,
      prefixesReturn,
      SemActReturn,
      shapeExprReturn,
      shapesReturn,
      ShapeOrReturn,
      ShapeAndReturn,
      ShapeNotReturn,
      ShapeRefReturn,
      NodeConstraintReturn,
      ShapeReturn,
      valueSetValueReturn,
      tripleExprReturn,
      AnnotationReturn,
      EachOfReturn,
      OneOfReturn,
      TripleConstraintReturn,
      ObjectLiteralReturn,
      IriStemReturn,
      IriStemRangeReturn,
      LiteralStemReturn,
      LiteralStemRangeReturn,
      LanguageReturn,
      LanguageStemReturn,
      LanguageStemRangeReturn,
      AnnotationsReturn,
      SemActsReturn
    >
  >
) {
  const combinedTransformers: Transformers<
    SchemaReturn,
    prefixesReturn,
    SemActReturn,
    shapeExprReturn,
    shapesReturn,
    ShapeOrReturn,
    ShapeAndReturn,
    ShapeNotReturn,
    ShapeRefReturn,
    NodeConstraintReturn,
    ShapeReturn,
    valueSetValueReturn,
    tripleExprReturn,
    AnnotationReturn,
    EachOfReturn,
    OneOfReturn,
    TripleConstraintReturn,
    ObjectLiteralReturn,
    IriStemReturn,
    IriStemRangeReturn,
    LiteralStemReturn,
    LiteralStemRangeReturn,
    LanguageReturn,
    LanguageStemReturn,
    LanguageStemRangeReturn,
    AnnotationsReturn,
    SemActsReturn
  > = Object.assign(defaultTransformers, transformers);
  return traverseSchema(shexSchema, combinedTransformers);
}
